datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  MEMBER
  GUEST
}

// models
model Profile {
  id String @id @default(uuid())
  userId String @unique // from Clerk Authentication
  role UserRole @default(GUEST)
  name String?
  domain String? @unique// this is the domain name of the website, e.g https://www.example.com
  jobTitle String?
  bio String? @db.Text
  about String? @db.Text
  imageUrl String? @db.Text
  resumeUrl String? @db.Text
  email String @db.Text
  workEmail String? @db.Text // this is the email that is displayed on the contact form, it is not the same as the email used for authentication

  // relationships
  socialLinks UserSocialLink[]
  projects Project[]
  certificates Certificate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Certificate {
  id String @id @default(uuid())
  name String
  description String
  imageUrl String @db.Text
  certificateUrl String @db.Text
  issuedBy String
  issueDate DateTime
  expirationDate DateTime? // this is optional because some certificates do not expire

  // relationships
  profileId String
  profile Profile@relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model UserSocialLink{
  id String @id @default(uuid())
  url String @db.Text
  iconName String // name of font awesome icon, pass this as a prop to the icon component
  iconType String // free-solid-svg-icons, free-brands-svg-icons, etc
  visible Boolean? @default(true)

  // relationships
  profileId String
  profile Profile@relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Project{
  id String @id @default(uuid())
  name String?
  description String? @db.Text
  thumbnailUrl String? @db.Text // thumbnail image, if not present, get the first letter of the project name and use it as the image
  projectUrl String? @db.Text
  githubUrl String? @db.Text
  featured Boolean? @default(false)
  company String?
  category String? // e.g web application, mobile application, etc
  visible Boolean? @default(true)
  content String? @db.Text // this contains the blog post content including images
  startDate DateTime?
  endDate DateTime?
  isWorkExperience Boolean? @default(false) // this is used to determine if this project is a work experience or not
  workExperienceTitle String? // this is used to display the title of the work experience
  
  // relationships
  profileId String  // [hidden] it is the foreign key that connects to the Profile model
  profile Profile@relation(fields: [profileId], references: [id], onDelete: Cascade) // explanation: https://www.prisma.io/docs/concepts/components/prisma-schema/relations#cascade

  tags String? @db.Text // this is a comma separated string of tags, e.g React, Node, etc

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}


